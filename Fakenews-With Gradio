# Importing Libraries
import pandas as pd
import gradio as gr
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.pipeline import Pipeline
from sklearn.metrics import classification_report, confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt

# Load dataset
data = pd.read_csv('news.csv')

# Split data
X = data['text']
y = data['label'].apply(lambda x: 1 if x == 'FAKE' else 0)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create pipeline
model = Pipeline([
    ('vectorizer', TfidfVectorizer(stop_words='english', max_df=0.7)),
    ('classifier', LogisticRegression())
])

# Train model
model.fit(X_train, y_train)

# Define Gradio prediction function
def predict_news(news_text):
    prediction = model.predict([news_text])[0]
    return "FAKE" if prediction == 1 else "REAL"

# Create Gradio Interface
interface = gr.Interface(
    fn=predict_news,
    inputs=gr.Textbox(lines=5, placeholder="Enter news article here..."),
    outputs="text",
    title="Fake News Detector",
    description="Enter a news article and find out whether it's REAL or FAKE."
)

# Launch the app
interface.launch()
